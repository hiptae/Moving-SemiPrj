package kr.co.mpago.controller.member;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import kr.co.mpago.domain.Member;
import kr.co.mpago.service.MemberService;
import kr.co.mpago.util.WebUtils;
import lombok.extern.log4j.Log4j;


@Log4j
@WebServlet("/member/profileModify")
public class profileModifyController extends HttpServlet{
	MemberService memberService = MemberService.getInstance();
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		Member member = (Member)req.getSession().getAttribute("member");
		if(member == null)     { // 비로그인시 메인으로 이동
            resp.sendRedirect("/");
            return;
        }
				 
		req.setAttribute("myMember", memberService.findBy(((Member)member).getUserid()));
		req.getRequestDispatcher("/WEB-INF/views/member/profileModify.jsp").forward(req, resp);
	
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	    String oldpassword = req.getParameter("oldpassword");
//	    log.info(oldpassword);
	    String password = req.getParameter("password");
	    String passwordchk = req.getParameter("passwordchk");

	    Object member = req.getSession().getAttribute("member");
	    if (member == null) { // 비로그인
	        resp.sendRedirect("/");
	        return;
	    }

	    // 유효성 검사
	    Member findMember = memberService.get(((Member) member).getUserid());

	    // oldpassword를 사용한 유효성 검사
	    if (!oldpassword.equals(findMember.getPassword())) {
	        WebUtils.alert(resp, "기존 비밀번호와 다릅니다.", true);
	    } else if (!password.equals(passwordchk)) {
	        WebUtils.alert(resp, "똑같이 입력해주세요", true);
	    } else {
	        findMember.setPassword(password); // 새로운 비밀번호로 업데이트
	        memberService.modifyPassword(findMember); // 업데이트 메서드 호출

	        PrintWriter pw = resp.getWriter();
	        pw.write("<script>alert('비밀번호 변경 성공'); location.href = '/';</script>");
	    }
		
		
		
		
		
		
		
		
		
//		req.setCharacterEncoding("utf-8");
//        String oldpassword = req.getParameter("oldpassword");
//        String password = req.getParameter("password");
//        String passwordchk = req.getParameter("passwordchk");
//
//        Object member = req.getSession().getAttribute("member");
//        if(member==null) {
//            WebUtils.alert(resp, "잘못된 접근입니다", true);
//            resp.sendRedirect("/");
//            return;
//        }
//
//        Member findMember = memberService.get(((Member) member).getUserid());
////        Member resultMember = memberService.getMember(((Member)member).getUserid());
//        if(!findMember.getPassword().equals(oldpassword) || !password.equals(passwordchk)) {
//            WebUtils.alert(resp, "비밀번호를 확인해주세요", true);
//            return;
//        }
//
//        Member newMember = Member.builder().userid(findMember.getUserid()).password(password).build();
//
//        log.info(newMember);
//
//        memberService.modifyPassword(newMember); 
//        

//        WebUtils.alert(resp, "비밀번호 변경에 성공했습니다", WebUtils.CONTEXT_PATH);
	}
}
